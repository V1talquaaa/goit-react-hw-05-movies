{"version":3,"file":"static/js/21.2b925b20.chunk.js","mappings":"mMA+CA,UA3Ce,WACf,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMP,EAAQG,EAAaK,IAAI,SAC3BR,IACJS,EAAAA,EAAAA,IAAeT,GAAOU,MAAK,SAAAC,GAAI,OAAIZ,EAAgBY,EAAKC,QAAzB,GAEhC,GAAE,CAACZ,EAAOG,IAcT,OACE,iCACA,kBAAMU,KAAK,SAASC,SARD,SAACC,GACpBA,EAAEC,iBACFZ,EAAgB,CAACJ,MAAOA,GAEzB,EAIC,WACE,kBAAOa,KAAK,QAAQI,SAbN,SAACF,GACnBd,EAASc,EAAEG,OAAOC,MACnB,EAWgDA,MAAOnB,KAEpD,mBAAQa,KAAK,SAAb,wBAEA,wBACCf,EAAasB,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACvB,OAAO,yBAAc,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAACC,KAAMpB,GAAjC,SAA6CgB,KAAlDC,EACnB,QAIJ,C","sources":["pages/Moviews.js"],"sourcesContent":["import { getFilmByQuery } from \"Services/getFilms\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\nconst [filmsByQuery, setfilmsByQuery] = useState([])\nconst [query, setQuery] = useState('')\nconst [searchParams, setSearchParams] = useSearchParams()\nconst location = useLocation();\n\nuseEffect(() => {\n  const query = searchParams.get('query')\n  if(!query) return\n  getFilmByQuery(query).then(data => setfilmsByQuery(data.results))\n\n}, [query, searchParams])\n\n\n\nconst handleQuery = (e) => {\n  setQuery(e.target.value);\n}\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    setSearchParams({query: query})\n    \n  };\n\n  return (\n    <>\n    <form type=\"submit\" onSubmit={onSubmitForm}>\n      <input type=\"input\" onChange={handleQuery} value={query}></input>\n      \n    <button type=\"submit\">Search</button>\n    </form>\n    <ul >\n    {filmsByQuery.map(({title, id}) => {\n        return <li key={id} ><Link to={`${id}`} state={{from: location}}>{title}</Link></li>\n    })}\n    </ul>\n    </>\n  );\n};\n\n\n\nexport default Movies;\n"],"names":["useState","filmsByQuery","setfilmsByQuery","query","setQuery","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","getFilmByQuery","then","data","results","type","onSubmit","e","preventDefault","onChange","target","value","map","title","id","to","state","from"],"sourceRoot":""}